import org.jetbrains.kotlin.gradle.dsl.JvmTarget
import org.jetbrains.kotlin.gradle.tasks.KotlinJvmCompile

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.9.23'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.23'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'kz.saya'
version = '0.0.16-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:3.2.5"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.1"
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jetbrains.kotlin.plugin.spring'
    apply plugin: 'io.spring.dependency-management'

    group = rootProject.group
    version = rootProject.version

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    repositories {
        mavenCentral()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:3.2.5"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.1"
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifactId = project.name // <-- Название модуля
            }
        }
        repositories {
            mavenLocal()
        }
    }

    tasks.withType(KotlinJvmCompile).configureEach {
        compilerOptions {
            jvmTarget.set(JvmTarget.JVM_17)
        }
    }

    tasks.withType(GenerateModuleMetadata).configureEach {
        suppressedValidationErrors.add('dependencies-without-versions')
    }
}
